<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
	"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping package="com.deliverik.infogovernor.sdl.model.entity">
    <sql-query name="SdlSummaryVWDAO.sdlSummaryQuery">
    <![CDATA[
    SELECT yearSummary.* FROM
      (SELECT A.month,B.breakm,B.impactm,B.safecasem,ceil(B.safemarkm) as safemarkm,
      		ceil(B.riskmarkm) as riskmarkm,B.capacitycasem,ceil(B.capacitymarkm) as capacitymarkm
       FROM (SELECT cid AS month FROM CODEDETAIL WHERE ccid = '151' ORDER BY cid ASC) A
		LEFT OUTER JOIN (
			SELECT substr(sibegin,6,2) as month,
				SUM(CASE WHEN sitype='I'  THEN sifacttime ELSE 0 END) AS breakm,
				SUM(CASE WHEN sitype='E'  THEN sifacttime ELSE 0 END) AS impactm,
				SUM(CASE WHEN sitype='P'  THEN 1 ELSE 0 END) AS safecasem,
				AVG(CASE WHEN sitype='P' AND simark > 0  THEN simark ELSE NULL END) AS safemarkm,
				AVG(CASE WHEN sitype='D' AND simark > 0  THEN simark ELSE NULL END) AS riskmarkm,
				SUM(CASE WHEN sitype='C'  THEN 1 ELSE 0 END) AS capacitycasem,
				AVG(CASE WHEN sitype='C' AND simark > 0  THEN simark ELSE NULL END) AS capacitymarkm
			FROM SDLINFO
			WHERE  substr(sibegin,1,4) = :year AND sieiid = :eiid
			group by substr(sibegin,6,2) 
				) B ON(A.month=B.month) 
		UNION ALL
			SELECT '13' as month,
				SUM(CASE WHEN sitype='I'  THEN sifacttime ELSE 0 END) AS breakm,
				SUM(CASE WHEN sitype='E'  THEN sifacttime ELSE 0 END) AS impactm,
				SUM(CASE WHEN sitype='P'  THEN 1 ELSE 0 END) AS safecasem,
				AVG(CASE WHEN sitype='P' AND simark > 0 THEN simark ELSE NULL END) AS safemarkm,
				AVG(CASE WHEN sitype='D' AND simark > 0 THEN simark ELSE NULL END) AS riskmarkm,
				SUM(CASE WHEN sitype='C'  THEN 1 ELSE 0 END) AS capacitycasem,
				AVG(CASE WHEN sitype='C' AND simark > 0 THEN simark ELSE NULL END) AS capacitymarkm
			FROM SDLINFO
			WHERE  substr(sibegin,1,4) = :year AND sieiid = :eiid
			group by substr(sibegin,1,4) 
		) yearSummary
		order by month
    ]]> 
    </sql-query>
    
    
    <sql-query name="SdlYearSummaryVWDAO.sdlYearSummaryQuery">
    <![CDATA[
    SELECT yearSummary.* FROM
      (SELECT A.sdieiid as sieiid,A.sdieiname as sieiname,B.breakm,B.impactm,B.safecasem,ceil(B.safemarkm) as safemarkm,
      		ceil(B.riskmarkm) as riskmarkm,B.capacitycasem,ceil(B.capacitymarkm) as capacitymarkm
      FROM SDLDEFINEINFO A
		LEFT OUTER JOIN (
      SELECT sieiid,sieiname,
				SUM(CASE WHEN sitype='I'  THEN sifacttime ELSE 0 END) AS breakm,
				SUM(CASE WHEN sitype='E'  THEN sifacttime ELSE 0 END) AS impactm,
				SUM(CASE WHEN sitype='P'  THEN 1 ELSE 0 END) AS safecasem,
				AVG(CASE WHEN sitype='P' AND simark > 0 THEN simark ELSE NULL END) AS safemarkm,
				AVG(CASE WHEN sitype='D' AND simark > 0 THEN simark ELSE NULL END) AS riskmarkm,
				SUM(CASE WHEN sitype='C'  THEN 1 ELSE 0 END) AS capacitycasem,
				AVG(CASE WHEN sitype='C' AND simark > 0 THEN simark ELSE NULL END) AS capacitymarkm
			FROM SDLINFO
			WHERE  substr(sibegin,1,4) = :year 
    ]]> 
    </sql-query>
    
    <sql-query name="ChangeKpiVWDAO.ChangeKpiQuery">
    <![CDATA[
    SELECT ChangeKpi.* FROM(
     		SELECT '0' as typeid, '基本变更' as typename,
				SUM(CASE WHEN prsubstatus='S'  THEN 1 ELSE 0 END) AS success,
				SUM(CASE WHEN prsubstatus='P'  THEN 1 ELSE 0 END) AS problem,
				SUM(CASE WHEN prsubstatus='F'  THEN 1 ELSE 0 END) AS fail
			FROM IG500
			WHERE  prtype='C' AND (prpdid = '0' or prpdid is null) AND prplantime>=:kpiOpenTime AND prplantime<=:kpiEndTime AND prstatus = 'C'
			UNION ALL
  			 SELECT A.pdid as typeid,A.pdname as typename,B.success,B.problem,B.fail 
      			FROM IG380 A
					LEFT OUTER JOIN ( SELECT prpdid,
										SUM(CASE WHEN prsubstatus='S'  THEN 1 ELSE 0 END) AS success,
										SUM(CASE WHEN prsubstatus='P'  THEN 1 ELSE 0 END) AS problem,
										SUM(CASE WHEN prsubstatus='F'  THEN 1 ELSE 0 END) AS fail
										FROM IG500
										WHERE  prtype='C' AND cast(prpdid as INTEGER) > 0 AND prplantime>=:kpiOpenTime AND prplantime<=:kpiEndTime
												AND prstatus = 'C'
										GROUP BY  prpdid
									) B
	  				ON A.pdid = B.prpdid
	  				INNER JOIN IG259 C
	  				ON A.ptid = C.ptid AND C.pttype='C'
	  ) ChangeKpi
	  ORDER BY typeid     
    ]]> 
    </sql-query>
    
    <sql-query name="IncidentKpiVWDAO.QueryByType">
    <![CDATA[
    SELECT IncidentKpi.* FROM(
  			 SELECT A.cid as typeid,A.syscoding as syscoding,A.cvalue as typename,'0' as urgency,'' as urgencyname,B.resolve 
      			FROM CodeDetail A
					LEFT OUTER JOIN ( SELECT prsubtype,
										ceil(AVG(prfacttime)) AS resolve
										FROM IG500
										WHERE  prtype='I'  AND propentime>=:kpiOpenTime AND propentime<=:kpiEndTime
												AND prstatus = 'C'
										GROUP BY  prsubtype
									) B
	  				ON A.syscoding = B.prsubtype 
	  			WHERE A.syscoding like '109%'
	  ) IncidentKpi
	  ORDER BY syscoding      
    ]]> 
    </sql-query>
    <sql-query name="IncidentKpiVWDAO.QueryIDByType">
    <![CDATA[
		SELECT IncidentKpi.*,'' as syscoding,'' as urgencyName,'' as urgency,'' as typeId,'' as typeName  FROM(
		SELECT ceil(AVG(prfacttime)) AS resolve, prsubtype  FROM IG500 WHERE prstatus = 'C' AND prtype LIKE 'ID' 
		AND propentime>=:kpiOpenTime AND propentime<=:kpiEndTime
		GROUP BY  prsubtype
		 ) IncidentKpi  
    ]]> 
    </sql-query>
    <sql-query name="IncidentKpiVWDAO.QueryByUrgency">
    <![CDATA[
    SELECT IncidentKpi.* FROM(
  			 SELECT '' as typeid,'0' as syscoding,'' as typename,A.cid as urgency,A.cvalue as urgencyname,B.resolve
      			FROM CodeDetail A
					LEFT OUTER JOIN ( SELECT prurgency,
										ceil(AVG(prfacttime)) AS resolve
										FROM IG500
										WHERE  prtype LIKE 'I%'  AND propentime>=:kpiOpenTime AND propentime<=:kpiEndTime
												AND prstatus = 'C'
										GROUP BY  prurgency
									) B
	  				ON A.cid = B.prurgency 
	  			WHERE A.ccid = '119'
	  ) IncidentKpi
	  ORDER BY urgency      
    ]]> 
    </sql-query>
    <sql-query name="IncidentKpiVWDAO.QueryByTypeAndUrgency">
    <![CDATA[   
  	SELECT IncidentKpi.* FROM(
  			 SELECT C.cid as typeid,C.syscoding as syscoding,C.cvalue as typename,(CASE WHEN D.cid is NULL THEN '1' ELSE D.cid END) as urgency,D.cvalue urgencyname,C.resolve 
  			 FROM(
  			 SELECT A.cid,A.syscoding,A.cvalue,B.prurgency,B.resolve
      			FROM CodeDetail A
					LEFT OUTER JOIN ( SELECT prsubtype,prurgency,
										ceil(AVG(prfacttime)) AS resolve
										FROM IG500
										WHERE  prtype='I' AND propentime>=:kpiOpenTime AND propentime<=:kpiEndTime
												AND prstatus = 'C'
										GROUP BY  prsubtype,prurgency
									) B
	  				ON A.syscoding = B.prsubtype 
	  			WHERE A.syscoding like '109%') C
	  			LEFT OUTER JOIN ( SELECT cid,cvalue
										FROM CodeDetail
										WHERE  ccid='119'
									) D
	  				ON C.prurgency = D.cid 
	  ) IncidentKpi
	  ORDER BY syscoding  
	  
    ]]> 
    </sql-query>
    <sql-query name="IncidentKpiVWDAO.QueryByUrgencyAndType">
    <![CDATA[
    SELECT IncidentKpi.* FROM(
  			 SELECT A.cid as urgency,A.cvalue as urgencyname,'' as typeid,(CASE WHEN B.prsubtype is NULL THEN '1' ELSE B.prsubtype END)as syscoding,B.prbusiness as typename,B.resolve
      			FROM CodeDetail A
					LEFT OUTER JOIN ( SELECT prurgency,prsubtype,prbusiness,
										ceil(AVG(prfacttime)) AS resolve
										FROM IG500
										WHERE  prtype='I' AND propentime>=:kpiOpenTime AND propentime<=:kpiEndTime
												AND prstatus = 'C'
										GROUP BY  prurgency,prsubtype,prbusiness
									) B
	  				ON A.cid = B.prurgency 
	  			WHERE A.ccid = '119' 
	  ) IncidentKpi
	  ORDER BY urgency,syscoding      
    ]]> 
    </sql-query>
</hibernate-mapping>