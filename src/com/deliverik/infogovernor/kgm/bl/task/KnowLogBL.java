/*
 * 北京递蓝科软件技术有限公司版权所有，保留所有权利。
 */

package com.deliverik.infogovernor.kgm.bl.task;

import java.util.List;

import com.deliverik.framework.base.BLException;
import com.deliverik.framework.base.BaseBL;
import com.deliverik.infogovernor.kgm.model.KnowLogInfo;
import com.deliverik.infogovernor.kgm.model.condition.KnowLogSearchCond;
import com.deliverik.infogovernor.kgm.model.entity.KnowLogTB;

/**
  * 概述: knowLog业务逻辑接口
  * 功能描述: knowLog业务逻辑接口
  * 创建记录: 2011/05/30
  * 修改记录: 
  */
public interface KnowLogBL extends BaseBL {

	/**
	 * knowLog实例取得
	 *
	 * @return knowLog实例
	 */
	public KnowLogTB getKnowLogTBInstance();

	/**
	 * 全件检索
	 *
	 * @return 检索结果集
	 */
	public List<KnowLogInfo> searchKnowLog();

	/**
	 * 主键检索处理
	 *
	 * @param pk 主键
	 * @return 检索结果
	 */
	public KnowLogInfo searchKnowLogByPK(Integer pk)
		throws BLException;

	/**
	 * 条件检索结果件数取得
	 *
	 * @param cond 检索条件
	 * @return 检索结果件数
	 */
	public int getSearchCount(KnowLogSearchCond cond);

	/**
	 * 条件检索处理
	 *
	 * @param cond 检索条件
	 * @return 检索结果列表
	 */
	public List<KnowLogInfo> searchKnowLog(
			KnowLogSearchCond cond);

	/**
	 * 条件检索处理
	 *
	 * @param cond 检索条件
	 * @param start 检索记录起始行号
	 * @param count 检索记录件数
	 * @return 检索结果列表
	 */
	public List<KnowLogInfo> searchKnowLog(
			KnowLogSearchCond cond, int start,
			int count);

	/**
	 * 新增处理
	 *
	 * @param instance 新增实例
	 * @return 新增实例
	 */
	public KnowLogInfo registKnowLog(KnowLogInfo instance)
		throws BLException;

	/**
	 * 修改处理
	 *
	 * @param instance 修改实例
	 * @return 修改实例
	 */
	public KnowLogInfo updateKnowLog(KnowLogInfo instance)
		throws BLException;

	/**
	 * 删除处理
	 *
	 * @param pk 主键
	 */
	public void deleteKnowLogByPK(Integer pk)
		throws BLException;

	/**
	 * 删除处理
	 *
	 * @param instance 删除实例
	 */
	public void deleteKnowLog(KnowLogInfo instance)
		throws BLException;

	/**
	 * 添加日志信息
	 *
	 * @param instance  添加日志信息
	 */
	public KnowLogInfo addKnowLog(Integer klkid,String userId,String userName,String time,String desc) throws BLException;
}