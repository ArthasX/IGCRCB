
package com.openmind.service;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

import org.apache.struts.util.MessageResources;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "SendServiceImplService", targetNamespace = "http://service.openmind.com/", wsdlLocation = "http://10.3.21.36:9999/SendService?wsdl")
public class SendServiceImplService
    extends Service
{

    private final static URL SENDSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException SENDSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName SENDSERVICEIMPLSERVICE_QNAME = new QName("http://service.openmind.com/", "SendServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL(MessageResources.getMessageResources("ApplicationResources").getMessage("WX_SERVICE_ADDRESS"));
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        SENDSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        SENDSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public SendServiceImplService() {
        super(__getWsdlLocation(), SENDSERVICEIMPLSERVICE_QNAME);
    }

    public SendServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), SENDSERVICEIMPLSERVICE_QNAME, features);
    }

    public SendServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, SENDSERVICEIMPLSERVICE_QNAME);
    }

    public SendServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, SENDSERVICEIMPLSERVICE_QNAME, features);
    }

    public SendServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public SendServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns SendServiceImpl
     */
    @WebEndpoint(name = "SendServiceImplPort")
    public SendServiceImpl getSendServiceImplPort() {
        return super.getPort(new QName("http://service.openmind.com/", "SendServiceImplPort"), SendServiceImpl.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns SendServiceImpl
     */
    @WebEndpoint(name = "SendServiceImplPort")
    public SendServiceImpl getSendServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://service.openmind.com/", "SendServiceImplPort"), SendServiceImpl.class, features);
    }

    private static URL __getWsdlLocation() {
        if (SENDSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw SENDSERVICEIMPLSERVICE_EXCEPTION;
        }
        return SENDSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
