CREATE TABLE "ig".R01
(
  R0101 INTEGER NOT NULL,
  R0102 INTEGER NOT NULL,
  R0103 VARCHAR(3),
  R0104 VARCHAR(2),
  R0105 VARCHAR(200),
  R0106 VARCHAR(2000),
  R0107 CHAR(16),
  R0108 CHAR(16),
  R0109 CHAR(7),
  R0110 VARCHAR(128),
  R0111 VARCHAR(11),
  R0112 INTEGER,
  R0113 VARCHAR(64),
  R0114 VARCHAR(16),
  R0115 VARCHAR(32),
  R0116 VARCHAR(32),
  R0117 VARCHAR(128),
  R0118 VARCHAR(32),
  R0119 VARCHAR(32),
  R0120 CHAR(1),
  R0121 CHAR(16),
  R0122 CHAR(16),
  R0123 CHAR(1),
  R0124 VARCHAR(16),
  R0125 VARCHAR(16),
  R0126 CHAR(1),
  R0127 CHAR(1),
  R0128 CHAR(1),
  R0129 CHAR(2),
  R0130 VARCHAR(32),
  R0131 VARCHAR(128),
  fingerprint VARCHAR(256),
  PRIMARY KEY (R0101)
) TABLESPACE "IG_SPACE";



CREATE TABLE "ig".R02
(
  R0201 INTEGER NOT NULL,
  R0202 INTEGER NOT NULL,
  R0203 VARCHAR(128),
  R0204 VARCHAR(32),
  R0205 VARCHAR(3000),
  R0206 CHAR(1),
  R0207 INTEGER NOT NULL,
  R0208 INTEGER,
  R0209 VARCHAR(16),
  R0210 VARCHAR(64),
  R0211 VARCHAR(32),
  fingerprint VARCHAR(256),
  PRIMARY KEY (R0201,R0207)
) TABLESPACE "IG_SPACE";



CREATE OR REPLACE VIEW "ig".IG173 AS
SELECT PDID, PSDCODE, PSDNAME
  FROM "ig".IG333
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'I')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '103'
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'P')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '104'
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'C')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '105'
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'D')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '106'
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'S')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '125'
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'WA')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '107'
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'WB')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '108'
UNION ALL
SELECT PDID, CID, CVALUE
  FROM "ig".CODEDETAIL
 INNER JOIN "ig".IG259 A ON (A.PTTYPE = 'WS')
 INNER JOIN "ig".IG380 B ON (A.PTID = B.PTID)
 WHERE CCID = '221';

-------------------------------------------TRIG_001----------------------------------------------------
CREATE OR REPLACE FUNCTION "ig".TRIG_001_F() 
	RETURNS TRIGGER AS $$
	DECLARE
	FLAG INT := 0;
	BEGIN
  SELECT COUNT(1) INTO FLAG FROM "ig".IG500 IG500 
	INNER JOIN "ig".IG380 B ON (IG500.PRPDID = B.PDID) WHERE B.PDSTATUS = 'a' AND IG500.PRID = NEW.PRID;
  IF FLAG = 1 THEN
    INSERT INTO "ig".R01
      (R0101,
       R0102,
       R0103,
       R0104,
       R0105,
       R0106,
       R0107,
       R0108,
       R0109,
       R0110,
       R0111,
       R0112,
       R0113,
       R0114,
       R0115,
       R0116,
       R0117,
       R0118,
       R0119,
       R0120,
       R0121,
       R0122,
       R0123,
       R0124,
       R0125,
       R0126,
       R0127,
       R0128,
       R0129,
       R0130,
       R0131)
      SELECT NEW.PPID,
             IG500.PRID,
             IG500.PRTYPE,
             IG500.PRSTATUS,
             IG500.PRTITLE,
             IG500.PRDESC,
             IG500.PROPENTIME,
             IG500.PRCLOSETIME,
             IG500.PRPDID,
             IG500.PRPDNAME,
             IG500.PRSERIALNUM,
             NEW.PPROLEID,
             NEW.PPROLENAME,
             NEW.PPUSERID,
             NEW.PPUSERNAME,
             NEW.PPORGID,
             (SELECT ORGNAME FROM "ig".ORGANIZATION WHERE CAST(ORGID AS VARCHAR) = NEW.PPORGID),
             A.PSDNAME,
             B.PSDNAME,
             NEW.PPSTATUS,
             NEW.PPINITTIME,
             NEW.PPPROCTIME,
             NEW.PPSUBSTATUS,
             NEW.PPBACKTIME,
             NEW.PPPROXYUSERID,
             NEW.PPSUPER,
             NEW.PPROLEMANAGER,
             NEW.PPDUTYPERSON,
             NEW.PBDID,
             (SELECT USERNAME FROM "ig".IGUSER WHERE USERID = NEW.PPPROXYUSERID),
             C.PTNAME
       FROM "ig".IG500 IG500
       INNER JOIN "ig".IG173 A ON (IG500.PRPDID = A.PDID AND IG500.PRSTATUS = A.PSDCODE)
       INNER JOIN "ig".IG173 B ON (IG500.PRPDID = B.PDID AND B.PSDCODE = NEW.PPSTATUS)
       INNER JOIN "ig".IG259 C ON (IG500.PRTYPE = C.PTTYPE)
       WHERE PRID = NEW.PRID;
  END IF;
  RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER TRIG_001
  BEFORE INSERT ON "ig".IG337
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_001_F();
  
-------------------------------------------TRIG_002----------------------------------------------------

CREATE OR REPLACE FUNCTION "ig".TRIG_002_F() 
	RETURNS TRIGGER AS $$
DECLARE
  STATUS     VARCHAR(10);
  STATUSDESC VARCHAR(128);
BEGIN  
    IF NEW.PRSTATUS = 'C' AND NEW.PRSUBSTATUS = 'C' THEN
    STATUS     := 'C1';
    STATUSDESC := '已经关闭（中止）';
  ELSIF NEW.PRTYPE = 'C' AND NEW.PRSTATUS = 'C' THEN
    IF NEW.PRSUBSTATUS = 'S' THEN
      STATUS     := 'C2';
      STATUSDESC := '已经关闭（成功）';
    ELSIF NEW.PRSUBSTATUS = 'F' THEN
      STATUS     := 'C3';
      STATUSDESC := '已经关闭（失败）';
    ELSIF NEW.PRSUBSTATUS = 'P' THEN
      STATUS     := 'C4';
      STATUSDESC := '已经关闭（存在问题）';
    END IF;
  ELSIF NEW.PRTYPE = 'D' AND NEW.PRSTATUS = 'C' THEN
    IF NEW.PRSUBSTATUS = 'S' THEN
      STATUS     := 'C2';
      STATUSDESC := '已经关闭（成功）';
    ELSIF NEW.PRSUBSTATUS = 'F' THEN
      STATUS     := 'C3';
      STATUSDESC := '已经关闭（失败）';
    ELSIF NEW.PRSUBSTATUS = 'P' THEN
      STATUS     := 'C4';
      STATUSDESC := '已经关闭（存在问题）';
    END IF;
  ELSE
    STATUS := NEW.PRSTATUS;
    SELECT PSDNAME
      INTO STATUSDESC
      FROM "ig".IG173
     WHERE PDID = NEW.PRPDID
       AND PSDCODE = NEW.PRSTATUS;
  END IF;
  UPDATE "ig".R01
     SET R0104 = STATUS, R0118 = STATUSDESC, R0108 = NEW.PRCLOSETIME
   WHERE R0102 = NEW.PRID;
  RETURN NEW;
END;
$$
LANGUAGE plpgsql;  
  
CREATE TRIGGER TRIG_002
  AFTER UPDATE ON "ig".IG500
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_002_F();

-------------------------------------------TRIG_003----------------------------------------------------
CREATE OR REPLACE FUNCTION "ig".TRIG_003_F() 
	RETURNS TRIGGER AS $$
BEGIN 
  DELETE FROM "ig".R01 WHERE R0101 = OLD.PPID;
  RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER TRIG_003
  AFTER DELETE ON "ig".IG337
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_003_F();

-------------------------------------------TRIG_004----------------------------------------------------
  
CREATE OR REPLACE FUNCTION "ig".TRIG_004_F() 
	RETURNS TRIGGER AS $$
BEGIN
  UPDATE "ig".R01
     SET R0112 = NEW.PPROLEID,
         R0113 = NEW.PPROLENAME,
         R0114 = NEW.PPUSERID,
         R0115 = NEW.PPUSERNAME,
         R0116 = NEW.PPORGID,
         R0117 = (SELECT ORGNAME FROM "ig".ORGANIZATION WHERE CAST(ORGID AS VARCHAR) = NEW.PPORGID),
         R0121 = NEW.PPINITTIME,
         R0122 = NEW.PPPROCTIME,
         R0123 = NEW.PPSUBSTATUS,
         R0124 = NEW.PPBACKTIME,
         R0125 = NEW.PPPROXYUSERID,
         R0126 = NEW.PPSUPER,
         R0127 = NEW.PPROLEMANAGER,
         R0128 = NEW.PPDUTYPERSON,
         R0129 = NEW.PBDID,
         R0130 = (SELECT USERNAME
                    FROM "ig".IGUSER
                   WHERE USERID = NEW.PPPROXYUSERID)
   WHERE R0101 = NEW.PPID;
   RETURN NEW;
END;
$$
LANGUAGE plpgsql;


CREATE TRIGGER TRIG_004
  AFTER UPDATE ON "ig".IG337
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_004_F();
 
-------------------------------------------TRIG_005----------------------------------------------------
  
CREATE OR REPLACE FUNCTION "ig".TRIG_005_F() 
	RETURNS TRIGGER AS $$
DECLARE
  FLAG INT := 0;
BEGIN
  IF NEW.PIDMODE = '0' THEN
    SELECT COUNT(1)
      INTO FLAG
      FROM "ig".IG500 IG500
     INNER JOIN "ig".IG380 B ON (IG500.PRPDID = B.PDID)
     WHERE B.PDSTATUS = 'a'
       AND IG500.PRID = NEW.PRID;
    IF FLAG = 1 THEN
      INSERT INTO "ig".R02
        (R0201, R0202, R0203, R0204, R0205, R0206, R0207, R0208, R0209)
      VALUES
        (NEW.PIID,
         NEW.PRID,
         NEW.PIVARNAME,
         NEW.PIVARLABEL,
         NEW.PIVARVALUE,
         NEW.PIDMODE,
         0,
         NULL,
         NULL);
    END IF;
  END IF;
   RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER TRIG_005
  AFTER INSERT ON "ig".IG599
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_005_F();

 
-------------------------------------------TRIG_006----------------------------------------------------
CREATE OR REPLACE FUNCTION "ig".TRIG_006_F() 
	RETURNS TRIGGER AS $$
BEGIN
	UPDATE "ig".R02 A SET R0205 = NEW.PIVARVALUE WHERE R0201 = NEW.PIID;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER TRIG_006
  AFTER UPDATE ON "ig".IG599
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_006_F();

-------------------------------------------TRIG_007----------------------------------------------------

CREATE OR REPLACE FUNCTION "ig".TRIG_007_F() 
	RETURNS TRIGGER AS $$
DECLARE
  FLAG INT := 0;
BEGIN
  SELECT COUNT(1)
    INTO FLAG
    FROM "ig".IG599 A
   INNER JOIN "ig".IG500 IG500 ON (A.PRID = IG500.PRID)
   INNER JOIN "ig".IG380 B ON (IG500.PRPDID = B.PDID)
   WHERE A.PIID = NEW.PIID
     AND B.PDSTATUS = 'a';
  IF FLAG > 0 THEN
    INSERT INTO "ig".R02
      (R0201,
       R0202,
       R0203,
       R0204,
       R0205,
       R0206,
       R0207,
       R0208,
       R0209,
       R0210,
       R0211)
      SELECT A.PIID,
             A.PRID,
             A.PIVARNAME,
             A.PIVARLABEL,
             NEW.PPIVALUE,
             A.PIDMODE,
             NEW.PPIID,
             NEW.ROLEID,
             NEW.USERID,
             (SELECT ROLENAME FROM "ig".ROLE WHERE ROLEID = NEW.ROLEID),
             (SELECT USERNAME FROM "ig".IGUSER WHERE USERID = NEW.USERID)
        FROM "ig".IG599 A
       WHERE A.PIID = NEW.PIID;
  END IF;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;


CREATE TRIGGER TRIG_007
  AFTER INSERT ON "ig".IG899
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_007_F();
  
  
 -------------------------------------------TRIG_008---------------------------------------------------- 
  
CREATE OR REPLACE FUNCTION "ig".TRIG_008_F() 
	RETURNS TRIGGER AS $$
BEGIN
  UPDATE "ig".R02
     SET R0205 = NEW.PPIVALUE,
         R0208 = NEW.ROLEID,
         R0209 = NEW.USERID,
         R0210 = (SELECT ROLENAME FROM "ig".ROLE WHERE ROLEID = NEW.ROLEID),
         R0211 = (SELECT USERNAME FROM "ig".IGUSER WHERE USERID = NEW.USERID)
   WHERE R0207 = NEW.PPIID;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;

CREATE TRIGGER TRIG_008
  AFTER UPDATE ON "ig".IG899
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_008_F();


-------------------------------------------TRIG_009----------------------------------------------------

CREATE OR REPLACE FUNCTION "ig".TRIG_009_F() 
	RETURNS TRIGGER AS $$
BEGIN
  DELETE FROM "ig".R01 WHERE R0102 = OLD.PRID;
  DELETE FROM "ig".R02 WHERE R0202 = OLD.PRID;
RETURN NEW;
END;
$$
LANGUAGE plpgsql;


CREATE TRIGGER TRIG_009
  AFTER DELETE ON "ig".IG500
  FOR EACH ROW EXECUTE PROCEDURE "ig".TRIG_009_F();
  
