CREATE TABLE "ig".NMS01
(
	ID INTEGER NOT NULL,
	NAME VARCHAR(32),
	PARENTID INTEGER,
	REMARK VARCHAR(64),
	VERSION INTEGER,
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID)
) TABLESPACE IG_SPACE;


CREATE TABLE "ig".NMS02
(
	ID VARCHAR(512) NOT NULL,
	SNMPVERSION INTEGER,
	SNMPPORT INTEGER,
	READCOMMIT VARCHAR(32),
	WRITECOMMIT VARCHAR(32),
	ISENABLESNMPPROXY CHAR,
	SNMPPROXYIP VARCHAR(64),
	SNMPSECURITYLEVEL CHAR(1),
	SNMPUSER VARCHAR(32),
	SNMPSECURITYCONTEXT VARCHAR(32),
	SNMPAUTHTYPE CHAR(1),
	SNMPPASSWORD VARCHAR(32),
	SNMPPRIVACYTYPE CHAR(1),
	SNMPPRIVACYPASSPHRASE VARCHAR(32),
	INSTIME CHAR(16),
	DELETEFLAG CHAR(1),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID)
) TABLESPACE IG_SPACE;


CREATE TABLE "ig".NMS03
(
	ID INTEGER NOT NULL,
	GID INTEGER NOT NULL,
	VERSION INTEGER,
	TYPE CHAR,
	ISENABLEPING CHAR,
	ISENABLEARP CHAR,
	FROMIP VARCHAR(64),
	TOIP VARCHAR(64),
	SUBNET VARCHAR(128),
	INSTIME CHAR(16),
	DELETEFLAG CHAR(1),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE
) TABLESPACE IG_SPACE;


CREATE TABLE "ig".NMS04
(
	ID VARCHAR(128) NOT NULL,
	NAME VARCHAR(32),
	DISPNAME VARCHAR(64),
	IP VARCHAR(64),
	MAC VARCHAR(32),
	TYPE CHAR(1),
	EIID INTEGER,
	EIVERSION INTEGER,
	EISMALLVERSION INTEGER,
	INSTIME CHAR(16),
	UPDTIME VARCHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID)
) TABLESPACE IG_SPACE;

CREATE TABLE "ig".NMS06
(
	ID VARCHAR(36) NOT NULL,
	DID VARCHAR(128) NOT NULL,
	IP VARCHAR(64),
	MAC VARCHAR(32),
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (DID) REFERENCES "ig".NMS04 (ID) ON DELETE CASCADE
)TABLESPACE IG_SPACE ;

CREATE TABLE "ig".NMS08
(
	ID INTEGER NOT NULL,
	GID INTEGER NOT NULL,
	GVERSION INTEGER,
	USERID VARCHAR(16),
	DID VARCHAR(128) NOT NULL,
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE,
	FOREIGN KEY (DID) REFERENCES "ig".NMS04 (ID) ON DELETE CASCADE
) TABLESPACE IG_SPACE;


CREATE TABLE "ig".NMS09
(
	ID INTEGER NOT NULL,
	GID INTEGER NOT NULL,
	GVERSION INTEGER NOT NULL,
	USERID VARCHAR(16),
	XML TEXT,
	WIDTH VARCHAR(16),
	HEIGHT VARCHAR(16),
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE
) TABLESPACE IG_SPACE;


CREATE TABLE "ig".NMS10
(
	ID VARCHAR(64) NOT NULL,
	FROMDID VARCHAR(64) NOT NULL,
	TODID VARCHAR(64) NOT NULL,
	GID INTEGER NOT NULL,
	GVERSION INTEGER NOT NULL,
	USERID VARCHAR(16),
	FROMPHYSICALPORT INTEGER,
	FROMNODEIFINDEX INTEGER,
	FROMNODEIFNAME VARCHAR(128),
	TOPHYSICALPORT INTEGER,
	TONODEIFINDEX INTEGER,
	TONODEIFNAME VARCHAR(128),
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE,
	FOREIGN KEY (FROMDID) REFERENCES "ig".NMS04 (ID) ON DELETE CASCADE,
	FOREIGN KEY (TODID) REFERENCES "ig".NMS04 (ID) ON DELETE CASCADE
) TABLESPACE IG_SPACE;

CREATE TABLE "ig".NMS11
(
	ID INTEGER NOT NULL,
	GID INTEGER NOT NULL,
	GVERSION INTEGER,
	TYPE INTEGER,
	MSG VARCHAR(4000),
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE
)TABLESPACE IG_SPACE;

CREATE TABLE "ig".NMS12
(
	ID INTEGER NOT NULL,
	GID INTEGER NOT NULL,
	GVERSION INTEGER,
	USERID VARCHAR(32),
	DID VARCHAR(128),
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE,
	FOREIGN KEY (DID) REFERENCES "ig".NMS04 (ID) ON DELETE CASCADE
)TABLESPACE IG_SPACE;

CREATE TABLE "ig".NMS13
(
	ID VARCHAR(64) NOT NULL,
	FROMDID VARCHAR(64) NOT NULL,
	TODID VARCHAR(64) NOT NULL,
	GID INTEGER NOT NULL,
	GVERSION INTEGER NOT NULL,
	FROMPHYSICALPORT INTEGER,
	FROMNODEIFINDEX INTEGER,
	FROMNODEIFNAME VARCHAR(128),
	TOPHYSICALPORT INTEGER,
	TONODEIFINDEX INTEGER,
	TONODEIFNAME VARCHAR(128),
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE,
	FOREIGN KEY (FROMDID) REFERENCES "ig".NMS04 (ID) ON DELETE CASCADE,
	FOREIGN KEY (TODID) REFERENCES "ig".NMS04 (ID) ON DELETE CASCADE
) TABLESPACE IG_SPACE;

CREATE TABLE "ig".NMS15
(
	ID INTEGER NOT NULL,
	GID INTEGER NOT NULL,
	GVERSION INTEGER,
	RVERSION INTEGER,
	STARTTIME CHAR(16),
	ENDTIME CHAR(16),
	INSTIME CHAR(16),
	FINGERPRINT VARCHAR(256),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE
)TABLESPACE IG_SPACE;

CREATE TABLE "ig".NMS17
(
	ID VARCHAR(36) NOT NULL,
	GID INTEGER,
	GVERSION INTEGER,
	USERID VARCHAR(16),
	X VARCHAR(32),
	Y VARCHAR(32),
	WIDTH VARCHAR(32),
	HEIGHT VARCHAR(32),
	TITLE VARCHAR(64),
	FINGERPRINT VARCHAR(256),
	rotation varchar(32),
	PRIMARY KEY (ID),
	FOREIGN KEY (GID) REFERENCES "ig".NMS01 (ID) ON DELETE CASCADE
)TABLESPACE IG_SPACE;

INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS01_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS03_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS08_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS09_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS10_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS11_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS12_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS13_SEQUENCE', 1000);
INSERT INTO "ig".SEQUENCE_GENERATOR_TABLE (SEQUENCE_NAME, SEQUENCE_VALUE)
VALUES ('NMS15_SEQUENCE', 1000);

insert into "ig".nms01 (id, name , version) values (1, '全网' , 0);

insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT09SYM10', '网络拓扑管理', '', '', 'M2', null, null, null, '', '', '0910', '0');

insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT09SYM1001', 'SNMP配置', '', '/IGCOM0202.do?linkID=IGNMS0102', 'M3', null, null, null, '', '', '091001', '0');

insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT09SYM1002', '任务配置', '', '/IGCOM0202.do?linkID=IGNMS0103', 'M3', null, null, null, '', '', '091002', '0');

insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT09SYM1003', '拓扑图管理', '', '/IGCOM0202.do?linkID=IGNMS0101_M', 'M3', null, null, null, '', '', '091003', '0');

insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT09SYM1004', '拓扑图查看', '', '/IGCOM0202.do?linkID=IGNMS0101_L', 'M3', null, null, null, '', '', '091004', '0');

--网络管理
insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT18IOP', '网络管理', null, '/IGCOM0202.do?linkID=IGCOM0227', 'M1', null, null, null, null, 'IGCI01', '08', '0');
insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT18IOP01','网络拓扑',null,null,'M2',null,null,null,null,'IGCI01','0801','0');
insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT18IOP0101','拓扑图管理',null,'/IGCOM0202.do?linkID=IGNMS0104_M','M3',null,null,null,null,'IGCI01','080101','0');
insert into "ig".ACTION (ACTNAME, ACTLABEL, ACTDESC, ACTURL, ACTTYPE, ACTL1ID, ACTL2ID, ACTL3ID, FINGERPRINT, ACTROLETYPE, ACTSORTID, ACTURLTYPE)
values ('ACT18IOP0102','拓扑图查看',null,'/IGCOM0202.do?linkID=IGNMS0104_L','M3',null,null,null,null,'IGCI01','080102','0');

insert into "ig".codecategory (ccid, ccname, ccinfo, cceditable,pcflag) values ('171', '拓扑设备类型显示图片', '拓扑设备类型显示图片', '3', '0');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '0', 'assets/monitor/AIX.png', 'AIX主机', '2013/12/25 15:36');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '1', 'assets/monitor/Linux.png', 'Linux主机', '2013/12/25 15:36');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '2', 'assets/monitor/Win32.png', 'Windows主机', '2013/12/25 15:36');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '3', 'assets/monitor/multi_switch.png', '多层交换机', '2013/12/25 15:36');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '4', 'assets/monitor/nor_switch.png', '交换机', '2013/12/25 15:36');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '5', 'assets/monitor/route.png', '路由器', '2013/12/25 15:36');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '6', 'assets/monitor/FireWall.png', '防火墙', '2013/01/08 15:47');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '7', 'assets/monitor/pc.png', '计算机', '2013/01/17 15:44');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('171', '8', 'assets/monitor/HPUX.png', 'HP-UX', '2013/01/17 15:44');

insert into "ig".codecategory (ccid, ccname, ccinfo, cceditable,pcflag) values ('172', '网络拓扑配置', '网络拓扑配置', '3', '0');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('172', '1', 'C:/SOC_IGCAM/SOC_Tools/Bat/nmsStart.bat', '拓扑发现脚本路径', '2013/12/25 15:36');
insert into "ig".codedetail(ccid, cid, cvalue, cdinfo, updtime) values ('172', '2', '127.0.0.1/InfoGovernor:8080', 'WEB服务地址', '2013/12/25 15:36');
