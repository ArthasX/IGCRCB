CREATE LANGUAGE plpgsql;
------------------------------创建临时表-----------------------------------------
--1、创建ENTITYITEM、CONFIGITEM临时表
--2、将原表中数据放入临时表中
--3、删除原表中数据
---------------------------------------------------------------------------------

--1、创建ENTITYITEM、CONFIGITEM临时表
--创建SOC0118临时表
CREATE TABLE IG.SOC0118_TEMP
(
  EIID INTEGER NOT NULL , -- 资产ID
  EID CHARACTER VARYING(32) NOT NULL, -- 资产模型ID
  EIDESC CHARACTER VARYING(256), -- 资产说明
  EINAME CHARACTER VARYING(128), -- 资产名称
  EILABEL CHARACTER VARYING(128), -- 资产编号
  EIINSDATE CHARACTER(10), -- 资产登记日
  EIORGSYSCODING CHARACTER VARYING(32), -- 资产所属机构层次码
  ESYSCODING CHARACTER VARYING(128), -- 资产模型层次码
  EIUPDTIME CHARACTER(16), -- 资产更新时间
  EISTATUS CHARACTER(1), -- 资产状态
  EIVERSION INTEGER, -- 资产版本号
  FINGERPRINT CHARACTER VARYING(256), -- 时间戳
  EIUSERID CHARACTER VARYING(16), -- 资产管理人
  EIUSERNAME CHARACTER VARYING(32), -- 资产管理人姓名
  EISMALLVERSION INTEGER, -- 资产小版本
  EIROOTMARK INTEGER -- 资产所属树根节点实体标识
)
WITH (
  OIDS=FALSE
);


  
--创建SOC0107临时表
CREATE TABLE IG.SOC0107_TEMP
(
  CIID INTEGER NOT NULL , -- 资产属性ID
  CID CHARACTER VARYING(32) NOT NULL, -- 资产模型属性ID
  EIID INTEGER NOT NULL, -- 资产ID
  EID CHARACTER VARYING(32) NOT NULL, -- 资产模型ID
  CIVALUE CHARACTER VARYING(2000), -- 资产属性值
  CIUPDTIME CHARACTER(16), -- 资产属性更新时间
  ESYSCODING CHARACTER VARYING(32), -- 资产模型层次码
  CIEXPIRE CHARACTER(16), -- 资产属性失效时间
  CISTATUS CHARACTER(1), -- 资产属性状态
  CICURVER CHARACTER(1), -- 资产属性当前版本号
  CIVERSION INTEGER, -- 资产属性版本号
  CIVERINFO CHARACTER VARYING(128), -- 资产属性版本信息
  FINGERPRINT CHARACTER VARYING(256), -- 时间戳
  CISMALLVERSION INTEGER -- 资产属性小版本
)
WITH (
  OIDS=FALSE
);



--2、将原表中数据放入临时表中
INSERT INTO IG.SOC0118_TEMP
SELECT * FROM IG.SOC0118;
INSERT INTO IG.SOC0107_TEMP
SELECT * FROM IG.SOC0107;


--3、删除原表中数据
DELETE FROM IG.SOC0118;
DELETE FROM IG.SOC0107;



------------------------------创建分区表-----------------------------------------
--1、创建ENTITYITEM、CONFIGITEM分区表，设备、软件、应用、IP、人员放在一个分区表中
--   其余每种资产单独创建分区表
--2、创建函数及触发器
--3、将临时表中数据插入父表
--4、删除临时表
---------------------------------------------------------------------------------
--1、创建ENTITYITEM、CONFIGITEM分区表
--创建ENTITYITEM（SOC0118）分区表
--服务
CREATE TABLE IG.SOC0118_EID_CM04 (
	CHECK (EID LIKE 'CM04%' )
) INHERITS (IG.SOC0118);
--服务记录
CREATE TABLE IG.SOC0118_EID_CM12 (
	CHECK (EID LIKE 'CM12%' )
) INHERITS (IG.SOC0118);
--系统
CREATE TABLE IG.SOC0118_EID_CM05 (
	CHECK (EID LIKE 'CM05%' )
) INHERITS (IG.SOC0118);
--合同
CREATE TABLE IG.SOC0118_EID_CM06 (
	CHECK (EID LIKE 'CM06%' )
) INHERITS (IG.SOC0118);
--文档
CREATE TABLE IG.SOC0118_EID_CM07 (
	CHECK (EID LIKE 'CM07%' )
) INHERITS (IG.SOC0118);
--数据
CREATE TABLE IG.SOC0118_EID_CM09 (
	CHECK (EID LIKE 'CM09%' )
) INHERITS (IG.SOC0118);
--机房
CREATE TABLE IG.SOC0118_EID_CM10 (
	CHECK (EID LIKE 'CM10%' )
) INHERITS (IG.SOC0118);
--机柜
CREATE TABLE IG.SOC0118_EID_CM11 (
	CHECK (EID LIKE 'CM11%' )
) INHERITS (IG.SOC0118);
--历史父表中的数据（CM01、CM02、CM03、CM09、10）
CREATE TABLE IG.SOC0118_EID (
	CHECK (EID NOT LIKE 'CM04%' AND EID NOT LIKE 'CM05%' AND EID NOT LIKE 'CM06%' AND EID NOT LIKE 'CM07%' AND EID NOT LIKE 'CM09%' AND EID NOT LIKE 'CM10%' AND EID NOT LIKE 'CM11%' )
) INHERITS (IG.SOC0118);

--创建CONFIGITEM（SOC0107）分区表
--服务
CREATE TABLE IG.SOC0107_EID_CM04 (
	CHECK (EID LIKE 'CM04%' )
) INHERITS (IG.SOC0107);
--服务记录
CREATE TABLE IG.SOC0107_EID_CM12 (
	CHECK (EID LIKE 'CM12%' )
) INHERITS (IG.SOC0107);
--系统
CREATE TABLE IG.SOC0107_EID_CM05 (
	CHECK (EID LIKE 'CM05%' )
) INHERITS (IG.SOC0107);
--合同
CREATE TABLE IG.SOC0107_EID_CM06 (
	CHECK (EID LIKE 'CM06%' )
) INHERITS (IG.SOC0107);
--文档
CREATE TABLE IG.SOC0107_EID_CM07 (
	CHECK (EID LIKE 'CM07%' )
) INHERITS (IG.SOC0107);
--数据
CREATE TABLE IG.SOC0107_EID_CM09 (
	CHECK (EID LIKE 'CM09%' )
) INHERITS (IG.SOC0107);
--机房
CREATE TABLE IG.SOC0107_EID_CM10 (
	CHECK (EID LIKE 'CM10%' )
) INHERITS (IG.SOC0107);
--机柜
CREATE TABLE IG.SOC0107_EID_CM11 (
	CHECK (EID LIKE 'CM11%' )
) INHERITS (IG.SOC0107);
--历史父表中的数据（CM01、CM02、CM03、CM09、10）
CREATE TABLE IG.SOC0107_EID (
	CHECK (EID NOT LIKE 'CM04%' AND EID NOT LIKE 'CM05%' AND EID NOT LIKE 'CM06%' AND EID NOT LIKE 'CM07%' AND EID NOT LIKE 'CM09%' AND EID NOT LIKE 'CM10%' AND EID NOT LIKE 'CM11%' )
) INHERITS (IG.SOC0107);



--2、创建函数及触发器
--创建ENTITYITEM（SOC0118）函数
CREATE OR REPLACE FUNCTION IG.SOC0118_INSERT_TRIGGER()
RETURNS TRIGGER AS $$
/**
DECLARE
    SQL_CMD VARCHAR;
    INVALUE VARCHAR;
**/
BEGIN
	IF (NEW.EID LIKE 'CM04%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM04 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM12%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM12 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM05%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM05 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM06%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM06 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM07%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM07 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM09%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM09 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM10%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM10 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM11%')  THEN 
		INSERT INTO IG.SOC0118_EID_CM11 VALUES (NEW.*);
	ELSE
		INSERT INTO IG.SOC0118_EID VALUES (NEW.*);
	END IF;
RETURN NULL;
END;
$$
LANGUAGE PLPGSQL;

--创建CONFIGITEM（SOC0107）函数
CREATE OR REPLACE FUNCTION IG.SOC0107_INSERT_TRIGGER()
RETURNS TRIGGER AS $$
BEGIN
	IF (NEW.EID LIKE 'CM04%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM04 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM12%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM12 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM05%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM05 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM06%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM06 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM07%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM07 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM09%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM09 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM10%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM10 VALUES (NEW.*);
	ELSIF (NEW.EID LIKE 'CM11%')  THEN 
		INSERT INTO IG.SOC0107_EID_CM11 VALUES (NEW.*);
	ELSE
		INSERT INTO IG.SOC0107_EID VALUES (NEW.*);
	END IF;
RETURN NULL;
END;
$$
LANGUAGE PLPGSQL;

--创建ENTITYITEM（SOC0118）触发器
CREATE TRIGGER INSERT_SOC0118_TRIGGER
BEFORE INSERT ON IG.SOC0118
FOR EACH ROW EXECUTE PROCEDURE IG.SOC0118_INSERT_TRIGGER();

--创建CONFIGITEM（SOC0107）触发器
CREATE TRIGGER INSERT_SOC0107_TRIGGER
BEFORE INSERT ON IG.SOC0107
FOR EACH ROW EXECUTE PROCEDURE IG.SOC0107_INSERT_TRIGGER();


------------------------------还原历史数据---------------------------------------
--1、将临时表中数据插入父表
--2、删除临时表
---------------------------------------------------------------------------------
--1、将临时表中数据插入父表
INSERT INTO IG.SOC0118
SELECT * FROM IG.SOC0118_TEMP;
INSERT INTO IG.SOC0107
SELECT * FROM IG.SOC0107_TEMP;

--2、删除临时表
DROP TABLE IG.SOC0107_TEMP;
DROP TABLE IG.SOC0118_TEMP;
