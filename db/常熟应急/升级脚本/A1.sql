


--创建表DRILLPLAN
  CREATE TABLE DRILLPLAN
   (	"DID" INTEGER NOT NULL , 
	"DUSERID" VARCHAR(128) NOT NULL , 
	"DUSERNAME" VARCHAR(256) NOT NULL , 
	"CRTTIME" VARCHAR(16) NOT NULL , 
	"JUDGETIME" VARCHAR(16), 
	"DSERIAL" VARCHAR(20), 
	"DNAME" VARCHAR(512) NOT NULL , 
	"JUDGESTATUS" CHAR(1), 
	"DEPICT" VARCHAR(1024), 
	"DOPINION" VARCHAR(1024), 
	"FINGERPRINT" VARCHAR(256), 
	"JUDGEUSERID" VARCHAR(128), 
	"JUDGEUSERNAME" VARCHAR(256), 
	"COMPLETECOUNT" INTEGER,  
	 PRIMARY KEY ("DID")
   ); 
   
--创建表DRILLPLANITEM
CREATE TABLE DRILLPLANITEM 
   (	"DIID" INTEGER NOT NULL , 
	"DID" INTEGER NOT NULL , 
	"PRID" INTEGER, 
	"STATUS" VARCHAR(32), 
	"EXPECTTIME" VARCHAR(16) NOT NULL , 
	"ACTSTARTTIME" VARCHAR(16), 
	"DINAME" VARCHAR(256), 
	"DICONTANT" VARCHAR(256), 
	"DIDESTINATION" VARCHAR(1024), 
	"DISCENE" VARCHAR(1024), 
	"DISCOPE" VARCHAR(1024), 
	"DIDUTYORG" VARCHAR(512), 
	"PARTORG" VARCHAR(512), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("DIID")
  );
  
--创建表EVENTSS
  CREATE TABLE EVENTSS
   ("EVENTID" INTEGER NOT null, 
	"EVENTNAME" VARCHAR(256), 
	"LABELS" INTEGER NOT NULL , 
	"EVENTDES" VARCHAR(2000), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("EVENTID")
  );
  
  --创建STRUCTUREROLE

  CREATE TABLE STRUCTUREROLE
   (	"SRID" INTEGER NOT NULL , 
	"SYSCODING" VARCHAR(64) NOT NULL , 
	"CID" VARCHAR(64) NOT NULL , 
	"SNAME" VARCHAR(256) NOT NULL , 
	"ROLEID" INTEGER NOT NULL , 
	"ROLENAME" VARCHAR(512) NOT NULL , 
	"SRTYPE" CHARACTER(1) NOT NULL , 
	"FINGERPRINT" VARCHAR(256), 
	"INITCREATETIME" CHARACTER(20), 
	"LASTUPDATETIME" VARCHAR(20),
	 PRIMARY KEY ("SRID")
   ) ;
 --创建SIGNIN表

  CREATE TABLE SIGNIN 
   (	"SIID" INTEGER NOT NULL , 
	"DRILLPRID" INTEGER, 
	"ECPRID" INTEGER, 
	"SCENEPRID" INTEGER, 
	"SIUSERID" VARCHAR(16), 
	"SIUSERNAME" VARCHAR(16), 
	"SIROLEID" VARCHAR(16), 
	"WDC" INTEGER, 
	"WDP" INTEGER, 
	"SIGNINED" INTEGER, 
	"SITIME" VARCHAR(16), 
	 CONSTRAINT "SIGNIN_PKEY" PRIMARY KEY ("SIID")
   ); 
 
 
 --创建TRAINING
  CREATE TABLE TRAINING
   (	"TID" INTEGER NOT NULL , 
	"TRAINNAME" VARCHAR(128), 
	"TRAINPLAN" VARCHAR(512), 
	"TRAINDESC" VARCHAR(512), 
	"PSTARTDATE" VARCHAR(16), 
	"PENDDATE" VARCHAR(16), 
	"TARORGID" VARCHAR(64), 
	"TARORGNAME" VARCHAR(256), 
	"OFFORGID" VARCHAR(64), 
	"OFFORGNAME" VARCHAR(256), 
	"OFFUSERNAME" VARCHAR(256), 
	"UPDATETIME" VARCHAR(16), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("TID")
   );
 
 --创建TRAININGPLAN
 
  CREATE TABLE TRAININGPLAN
   (	"TPID" VARCHAR(10) NOT NULL , 
	"JBONUM" VARCHAR(20), 
	"STARTTIME" VARCHAR(20), 
	"CURRENTUID" VARCHAR(20), 
	"PROMOTERS" VARCHAR(128), 
	"DEPARTMENTID" VARCHAR(20), 
	"SPONSORDEPARTMENT" VARCHAR(512), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("TPID")
   ); 
 --创建TRAININGPLANDETAIL
 
  CREATE TABLE TRAININGPLANDETAIL
   (	"TPDID" VARCHAR(10) NOT NULL , 
	"TPID" VARCHAR(10) NOT NULL , 
	"SERIALNUMBER" INTEGER, 
	"CURRENTUID" VARCHAR(20), 
	"FULLNAME" VARCHAR(128), 
	"CURRICULUM" VARCHAR(512), 
	"TRAININGORGID" VARCHAR(20), 
	"TRAININGORGANIZATION" VARCHAR(512), 
	"TRAININGTIME" VARCHAR(20), 
	"ATTACHMENT" VARCHAR(512), 
	"FINGERPRINT" VARCHAR(256),	
	 PRIMARY KEY ("TPDID")
   ); 
 
 --创建TRAININGREPORT
  CREATE TABLE TRAININGREPORT
   (	"TRID" VARCHAR(10) NOT NULL , 
	"STARTTIME" VARCHAR(20), 
	"CURRENTUID" VARCHAR(20), 
	"PROMOTERS" VARCHAR(128), 
	"DEPARTMENTID" VARCHAR(20), 
	"SPONSORDEPARTMENT" VARCHAR(512), 
	"REPORTTITLE" VARCHAR(512), 
	"REPORTYEAR" VARCHAR(20), 
	"REPORTCONTENT" VARCHAR(3000), 
	"ATTACHMENT" VARCHAR(512), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("TRID")
   );

--创建TRAINMISSION

  CREATE TABLE TRAINMISSION
   (	"TMID" INTEGER NOT NULL , 
	"TPID" INTEGER NOT NULL , 
	"TMCOURSE" VARCHAR(128), 
	"TMORG" VARCHAR(1024), 
	"TMTIME" VARCHAR(19), 
	"TMTARGET" VARCHAR(1024), 
	"TMATT" VARCHAR(32), 
	"FINGERPRINT" VARCHAR(128), 
	 PRIMARY KEY ("TMID")
   ) ;
    
--TRAINPARTICIPATE
  CREATE TABLE TRAINPARTICIPATE
   (	"TPAID" INTEGER NOT NULL , 
	"TPANAME" VARCHAR(128), 
	"TPATEL" VARCHAR(32), 
	"TRID" INTEGER, 
	"FINGERPRINT" VARCHAR(128), 
	"TPAORG" VARCHAR(1024),
	 PRIMARY KEY ("TPAID")
  );

		
		
		
--TRAINRECORD

  CREATE TABLE TRAINRECORD
   (	"TRID" INTEGER NOT NULL , 
	"TRNAME" VARCHAR(128), 
	"TPID" INTEGER, 
	"TPNAME" VARCHAR(32), 
	"TPCONTENT" VARCHAR(1024), 
	"TRSTIME" VARCHAR(19), 
	"TRETIME" VARCHAR(19), 
	"TRSIDE" VARCHAR(1024), 
	"TRLECTURER" VARCHAR(128), 
	"TRATT" VARCHAR(32), 
	 PRIMARY KEY ("TRID")
 );
 
--
CREATE TABLE EMERGENCYLOG
   (	"ELID" INTEGER NOT NULL , 
	"ELPRID" INTEGER NOT NULL , 
	"ELLITYPE" VARCHAR(16), 
	"ELLIDTIME" VARCHAR(19), 
	"ELUSERID" VARCHAR(16), 
	"ELUSERNAME" VARCHAR(32), 
	"ELLIINFO" VARCHAR(2048), 
	"FINGERPRINT" VARCHAR(256), 
	"ELPSDID" VARCHAR(256), 
	"ELPSDNAME" VARCHAR(256), 
	 CONSTRAINT "EMERGENCYLOG_PKEY" PRIMARY KEY ("ELID")
  );
   --修改应急日志表
alter table emergencyLog ADD COLUMN operate  varchar(32); 
-- 应急流程关系
  CREATE TABLE EMERGENCYRELATION
   (	"ERID" INTEGER NOT NULL , 
	"PARPRID" INTEGER NOT NULL , 
	"CLDPRID" INTEGER NOT NULL , 
	"PRRINSTIME" CHARACTER(16), 
	"CLDTYPE" CHARACTER(1) NOT NULL , 
	"FINGERPRINT" VARCHAR(256),
	 PRIMARY KEY ("ERID")
  );
  
  -- 关系表中添加关系类型 0:演练-场景  1:指挥-场景  2:演练-指挥
alter table EMERGENCYRELATION add  relatetype  CHAR(1);
  
--SCOPES

  CREATE TABLE SCOPES
   (	"SCOPEID" INTEGER NOT NULL, 
	"EVENTID" INTEGER NOT NULL , 
	"IMPSCOPE" VARCHAR(256), 
	"IMPBUS" VARCHAR(256), 
	"IMPTIME" VARCHAR(256), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("SCOPEID")
  );
 --TRAINPLAN
 CREATE TABLE TRAINPLAN
   (	"TPID" INTEGER NOT NULL , 
	"TPNAME" VARCHAR(128) NOT NULL , 
	"TPUSERID" VARCHAR(32), 
	"TPUSERNAME" VARCHAR(32), 
	"PTORGID" VARCHAR(32), 
	"TPORGNAME" VARCHAR(128), 
	"TPTIME" VARCHAR(19), 
	"TPSTATUS" CHARACTER(1), 
	"FINGERPRINT" VARCHAR(128), 
	"INITCREATETIME" CHARACTER(20), 
	"LASTUPDATETIME" VARCHAR(20), 
	 PRIMARY KEY ("TPID")
  );
  
  /* Create Tables */

  --DROP TABLE SOC0507;
--DROP TABLE SOC0509;
  
CREATE TABLE SOC0507
(
	ciid int NOT NULL,
	cid varchar(32),
	eiid int,
	eid varchar(32),
	civalue clob,
	ciupdtime char(16),
	esyscoding varchar(32),
	ciexpire char(16),
	cistatus char(1),
	cicurver char(1),
	civersion int,
	civerinfo varchar(128),
	fingerprint varchar(256),
	cismallversion int,
	PRIMARY KEY (ciid)
);


CREATE TABLE SOC0509
(
	cid varchar(32) NOT NULL,
	eid varchar(32) NOT NULL,
	pcid varchar(32),
	cname varchar(128),
	clabel varchar(32),
	cdesc varchar(40),
	cunit varchar(16),
	cstatus char(1),
	cseq numeric(4),
	ccategory varchar(16),
	coption varchar(64),
	cattach char(1),
	esyscoding varchar(32),
	fingerprint varchar(256),
	crequired varchar(8),
	corder numeric(4),
	PRIMARY KEY (cid)
);


create table IG481
(
  PGDID       CHAR(7) not null,
  PDID        CHAR(7) not null,
  createType    CHAR(1),
  PDVERSION   CHAR(1),
  FINGERPRINT VARCHAR(256),
   PRIMARY KEY (PGDID)
);
--ig483

  CREATE TABLE "IG483" 
   (	"PGRID" INTEGER NOT NULL, 
	"PGRUSERID" VARCHAR(16), 
	"PGRUSERNAME" VARCHAR(16), 
	"PGROPENTIME" CHARACTER(19), 
	"PGRCLOSETIME" CHARACTER(19), 
	"OCOUNT" INTEGER, 
	"CCOUNT" INTEGER, 
	"PGRSERIALNUM" VARCHAR(20), 
	"PGRTITLE" VARCHAR(200), 
	"PGRORGID" VARCHAR(32), 
	"PGRORGNAME" VARCHAR(128), 
	"PGDID" CHARACTER(7), 
	"PGDNAME" VARCHAR(64), 
	"PTTYPE" VARCHAR(3), 
	"ISTEST" CHARACTER(1), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("PGRID")
 );
   CREATE TABLE IG560
   (	"DVID" INTEGER NOT NULL, 
	"PIDID" CHARACTER(10) NOT NULL, 
	"PSDID" CHARACTER(10), 
	"DFVALUE" VARCHAR(3000), 
	"USEDTOALL" CHARACTER(1), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("DVID")
 );
 
 
 
  CREATE TABLE IG561 
   (	"PVLID" INTEGER NOT NULL, 
	"PRID" INTEGER NOT NULL, 
	"PIID" INTEGER NOT NULL, 
	"PSDID" CHARACTER(10) NOT NULL, 
	"PIDID" CHARACTER(10) NOT NULL, 
	"PIVARNAME" VARCHAR(128), 
	"PIVARLABEL" VARCHAR(128), 
	"PIVARTYPE" CHARACTER(1), 
	"PIUSERID" VARCHAR(128), 
	"PIVARVALUE" VARCHAR(3000), 
	"PIATTKEY" VARCHAR(32), 
	"PIDACCESS" CHARACTER(1), 
	"PIDREQUIRED" CHARACTER(1), 
	"FINGERPRINT" VARCHAR(256), 
	 PRIMARY KEY ("PVLID")
 );
 
        --查询显示列定义表
  CREATE TABLE IG110 
   (	SID CHAR(10) NOT NULL, 
	PDID CHAR(7) NOT NULL, 
	STYPE VARCHAR(8) NOT NULL, 
	SFLAG VARCHAR(128) NOT NULL, 
	SNAME VARCHAR(128) NOT NULL, 
	WIDTH INTEGER, 
	FINGERPRINT VARCHAR(256), 
	INITCREATETIME VARCHAR(20), 
	LASTUPDATETIME VARCHAR(20), 
	PRIMARY KEY (SID),
	FOREIGN KEY (PDID) REFERENCES IG380 (PDID) ON DELETE CASCADE
);
--流程查询条件定义表
  CREATE TABLE IG111 
   (	QID CHAR(10) NOT NULL, 
	PDID CHAR(7) NOT NULL, 
	QMODE VARCHAR(8) NOT NULL, 
	QTYPE VARCHAR(8) NOT NULL, 
	QFLAG VARCHAR(128) NOT NULL, 
	QNAME VARCHAR(128) NOT NULL, 
	FINGERPRINT VARCHAR(256), 
	INITCREATETIME VARCHAR(20), 
	LASTUPDATETIME VARCHAR(20), 
	PRIMARY KEY (QID),
	FOREIGN KEY (PDID) REFERENCES IG380 (PDID) ON DELETE CASCADE
);

--创建评估管理表
	CREATE TABLE evaluationcontent(
		EVID INTEGER NOT NULL PRIMARY KEY, 
		PRID INTEGER NOT NULL,
		SORTID INTEGER,
		PSDID VARCHAR(128),	
		STEPNAME VARCHAR(128),
		PEOPLES VARCHAR(1024),
		STARTTIME VARCHAR(128),
		STOPTIME VARCHAR(128),
		DOTIME VARCHAR(128),
		SUGGESTION VARCHAR(2048),
		EVPEOPLE VARCHAR(128),
		fLOWTYPE VARCHAR(128),
		FACTUSETIME VARCHAR(128),
		FINGERPRINT VARCHAR(256)
	);
--*************************改表***********************************
 

alter table IG224 add pendopentime TIMESTAMP(6);
alter table IG224 add pendclosetime TIMESTAMP(6);
alter table IG224 add pend CHAR(1);
alter table IG224 add pendpsdid CHAR(10);
alter table IG224 add PENDPSDNUM INTEGER;
alter table ig007 ADD COLUMN isflag  CHARACTER(1); 
alter table ig333 alter psddesc set data type varchar(1000);
alter table ig333 alter psdname set data type varchar(255);
--防止节点名太长
ALTER table ig036 alter column psname set data type VARCHAR(255);
--************************视图****************************
CREATE OR REPLACE VIEW IG591 AS
WITH T AS (SELECT PRID,PRSTATUS,PSDID,PSDNUM,PEND,PENDPSDID,PENDPSDNUM,RSLID FROM IG224 T WHERE (T.PRSTATUS = 'C' OR T.PRSTATUS = '#') AND PPSDID IS NULL)
	SELECT PRID,PRSTATUS,PSDID,PSDNUM,PEND,PENDPSDID,PENDPSDNUM,RSLID FROM T
	UNION ALL
	SELECT PRID,PRSTATUS,PSDID,PSDNUM,PEND,PENDPSDID,PENDPSDNUM,RSLID FROM IG224 A
	WHERE (VIRTUALSTATUS='0' OR VIRTUALSTATUS IS NULL)AND RSLCLOSETIME IS NULL AND NOT EXISTS (SELECT 1 FROM T WHERE A.PRID = T.PRID)
;

--更改视图脚本soc0124
create or replace view soc0124 AS
	SELECT
    a.eiid,
    a.eid,
    a.eidesc,
    a.einame,
    a.eilabel,
    a.eiupdtime,
    a.eistatus,
    a.eiinsdate,
    a.eiorgsyscoding,
    a.esyscoding,
    A.fingerPrint,
    b.ename,
    b.elabel,
    b.edesc,
    b.estatus,
    b.ecategory,
    b.ekey1,
    b.ekey2,
    b.ekey3,
    b.emodeltype,
    a.eiversion,
    a.eiuserid,
    a.eiusername,
    a.eismallversion,
    a.eirootmark,
    c.civalue AS serial,
    d.civalue AS buytime,
    e.civalue AS useorgan,
    f.civalue AS wbdate,
    COALESCE(g.eircount, 0) AS eircount,
    H.CIVALUE AS BLACKLISTREASON,
    I.CIVALUE AS SERVICETYPE,
  (SELECT s107.civalue FROM soc0107 s107 WHERE s107.eiid = a.eiid AND s107.civersion = a.eiversion AND s107.cid = 'CI010000001000') AS assetNumber,
  (SELECT s7.civalue FROM soc0107 s7 WHERE s7.cid = 'CI060000000008' AND s7.civersion = a.eiversion AND s7.eiid = (SELECT SUBSTR(s107.civalue, (INSTR(s107.civalue, '(') + 1), ((LENGTH(TRIM(s107.civalue)) - 1) - (INSTR(s107.civalue, '(')))) FROM soc0107 s107 WHERE s107.eiid = a.eiid AND s107.civersion = a.eiversion AND s107.cid = 'CI230000001005')) AS payee,
    (SELECT s107.civalue FROM soc0107 s107 WHERE s107.eiid = a.eiid AND s107.civersion = a.eiversion AND s107.cid = 'CI230000001002') AS amount,
    (SELECT s107.civalue FROM soc0107 s107 WHERE s107.eiid = a.eiid AND s107.civersion = a.eiversion AND s107.cid IN (SELECT s109.cid FROM soc0109 s109 WHERE a.esyscoding like s109.esyscoding || '%' AND s109.cname = '设备IP地址' AND s109.cstatus = '1')) AS ipAddress,
    (SELECT s107.civalue FROM soc0107 s107 WHERE s107.eiid = a.eiid AND s107.civersion = a.eiversion AND s107.cid IN (SELECT s109.cid FROM soc0109 s109 WHERE a.esyscoding like s109.esyscoding || '%' AND s109.cname = '设备用途' AND s109.cstatus = '1')) AS aote
FROM soc0118 a
LEFT OUTER JOIN soc0117 b ON (a.eid = b.eid)
LEFT OUTER JOIN soc0134 c ON (a.eiversion = c.civersion and a.eiid = c.eiid and c.clabel = 'IG_0027')
LEFT OUTER JOIN soc0134 d ON (a.eiversion = d.civersion and a.eiid = d.eiid and d.clabel = 'IG_0028')
LEFT OUTER JOIN soc0134 e ON (a.eiversion = e.civersion and a.eiid = e.eiid and e.clabel = 'IG_0006')
LEFT OUTER JOIN soc0134 f ON (a.eiversion = f.civersion and a.eiid = f.eiid and f.clabel = 'IG_0029')
LEFT OUTER JOIN soc0135 g ON (a.eiid = g.eiid)
left outer join soc0107 H on(A.eiid = H.eiid and A.eiversion = H.civersion and H.cid = 'CI050000000029')
left outer join soc0107 I on(A.eiid = I.eiid and A.eiversion = I.civersion and I.cid = 'CI050000000023');